"""
üß† PDF Alap√∫ Advanced Quiz Alkalmaz√°s
T√©mak√∂r√∂k szerint csoportos√≠tott k√©rd√©sek, v√°laszthat√≥ t√©mak√∂r√∂k √©s k√©rd√©ssz√°m
"""

import streamlit as st
import random
import time
from datetime import datetime

# Page config
st.set_page_config(
    page_title="üß† Advanced PDF Quiz",
    page_icon="üß†",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Quiz adatok t√©mak√∂r√∂k szerint csoportos√≠tva
QUIZ_DATA_BY_TOPIC = {
    "f√∂ldrajz": [
        {
            "question": "Mi a legmagasabb cs√∫cs a M√°tr√°ban?",
            "options": ["K√©kes", "Dobog√≥-k≈ë", "Cs√≥v√°nyos", "Szilv√°si-k≈ë"],
            "correct": 0,
            "explanation": "A K√©kes 1014 m√©ter magass√°g√°val a M√°tra √©s Magyarorsz√°g legmagasabb cs√∫csa."
        },
        {
            "question": "Melyik orsz√°g f≈ëv√°rosa Taskent?",
            "options": ["Kazahszt√°n", "√úzbegiszt√°n", "Kirgiziszt√°n", "T√°dzsikiszt√°n"],
            "correct": 1,
            "explanation": "Taskent √úzbegiszt√°n f≈ëv√°rosa, p√©nzneme a som."
        },
        {
            "question": "Melyik a vil√°g leghosszabb foly√≥ja?",
            "options": ["Amazonas", "N√≠lus", "Jangce", "Mississippi"],
            "correct": 1,
            "explanation": "A N√≠lus 6650 km hossz√°val a vil√°g leghosszabb foly√≥ja."
        },
        {
            "question": "Melyik orsz√°g p√©nzneme a manat?",
            "options": ["Gr√∫zia", "Azerbajdzs√°n", "√ñrm√©nyorsz√°g", "Kazahszt√°n"],
            "correct": 1,
            "explanation": "Azerbajdzs√°n p√©nzneme a manat, f≈ëv√°rosa Baku."
        },
        {
            "question": "Mi Bhut√°n f≈ëv√°rosa?",
            "options": ["Thimphu", "Katmandu", "Dhaka", "Vientiane"],
            "correct": 0,
            "explanation": "Bhut√°n f≈ëv√°rosa Thimphu, p√©nzneme a ngultrum."
        },
        {
            "question": "Melyik hegys√©g cs√∫csa a B√∂rzs√∂ny legmagasabb pontja?",
            "options": ["Nagy-Kopasz", "Cs√≥v√°nyos", "Pilis", "Dobog√≥-k≈ë"],
            "correct": 1,
            "explanation": "A Cs√≥v√°nyos (938 m) a B√∂rzs√∂ny hegys√©g legmagasabb cs√∫csa."
        },
        {
            "question": "Melyik kontinensen tal√°lhat√≥ a Kilimandzs√°r√≥?",
            "options": ["√Åzsia", "D√©l-Amerika", "Afrika", "Ausztr√°lia"],
            "correct": 2,
            "explanation": "A Kilimandzs√°r√≥ (5895 m) Afrika legmagasabb hegycs√∫csa."
        },
        {
            "question": "Mi Costa Rica p√©nzneme?",
            "options": ["Peso", "Col√≥n", "Doll√°r", "Quetzal"],
            "correct": 1,
            "explanation": "Costa Rica p√©nzneme a Costa Rica-i col√≥n."
        },
        {
            "question": "Melyik az Eur√≥pa leghosszabb foly√≥ja?",
            "options": ["Duna", "Rajna", "Volga", "Dnyeper"],
            "correct": 2,
            "explanation": "A Volga 3530 km hossz√°val Eur√≥pa leghosszabb foly√≥ja."
        },
        {
            "question": "Mi a Pilis hegys√©g legmagasabb cs√∫csa?",
            "options": ["Nagy-Kopasz", "Pilis", "Dobog√≥-k≈ë", "Sz√°nk√≥-hegy"],
            "correct": 1,
            "explanation": "A Pilis (757 m) a Pilis hegys√©g n√©vad√≥ √©s legmagasabb cs√∫csa."
        }
    ],
    "zene": [
        {
            "question": "Ki szerezte a 'Di√≥t√∂r≈ë' balettzen√©t?",
            "options": ["Beethoven", "Mozart", "Csajkovszkij", "Dvorak"],
            "correct": 2,
            "explanation": "Csajkovszkij szerezte a h√≠res 'Di√≥t√∂r≈ë' balettzen√©t."
        },
        {
            "question": "Melyik zeneszerz≈ë √≠rta a 'T√∂r√∂k indul√≥'-t?",
            "options": ["Mozart", "Beethoven", "Chopin", "Liszt"],
            "correct": 0,
            "explanation": "Mozart szerezte a h√≠res 'T√∂r√∂k indul√≥'-t."
        },
        {
            "question": "Ki szerezte a 'H√°ry J√°nos' c√≠m≈± m≈±vet?",
            "options": ["Bart√≥k B√©la", "Kod√°ly Zolt√°n", "Liszt Ferenc", "Erkel Ferenc"],
            "correct": 1,
            "explanation": "Kod√°ly Zolt√°n szerezte a 'H√°ry J√°nos' c√≠m≈± n√©poper√°t."
        },
        {
            "question": "Ki szerezte a 'Hatty√∫k tava' balettzen√©t?",
            "options": ["Beethoven", "Csajkovszkij", "Ravel", "Stravinsky"],
            "correct": 1,
            "explanation": "Csajkovszkij szerezte a 'Hatty√∫k tava' c√≠m≈± balettet is."
        },
        {
            "question": "Melyik zeneszerz≈ë √≠rt 'Magyar rapsz√≥di√°'-kat?",
            "options": ["Bart√≥k B√©la", "Kod√°ly Zolt√°n", "Liszt Ferenc", "Chopin"],
            "correct": 2,
            "explanation": "Liszt Ferenc √≠rt 19 Magyar rapsz√≥di√°t."
        },
        {
            "question": "Ki szerezte a 'Peer Gynt' zen√©j√©t?",
            "options": ["Grieg", "Sibelius", "Nielsen", "Brahms"],
            "correct": 0,
            "explanation": "Edvard Grieg szerezte a 'Peer Gynt' k√≠s√©r≈ëzen√©j√©t."
        },
        {
            "question": "Ki szerezte a 'Bolero'-t?",
            "options": ["Debussy", "Ravel", "Satie", "Faur√©"],
            "correct": 1,
            "explanation": "Maurice Ravel szerezte a h√≠res 'Bolero'-t."
        },
        {
            "question": "Melyik zeneszerz≈ë √≠rta a 'Rom√°n t√°ncok'-at?",
            "options": ["Liszt Ferenc", "Brahms", "Bart√≥k B√©la", "Dvorak"],
            "correct": 2,
            "explanation": "Bart√≥k B√©la szerezte a 'Rom√°n t√°ncok'-at."
        },
        {
            "question": "Ki szerezte a 'Carmina Burana'-t?",
            "options": ["Carl Orff", "Wagner", "Brahms", "Mahler"],
            "correct": 0,
            "explanation": "Carl Orff szerezte a 'Carmina Burana' kant√°t√°t."
        },
        {
            "question": "Ki √≠rta a 'Pisztr√°ng √∂t√∂s'-t?",
            "options": ["Mozart", "Schubert", "Haydn", "Brahms"],
            "correct": 1,
            "explanation": "Franz Schubert szerezte a 'Pisztr√°ng' √∂t√∂st (von√≥sn√©gyes + zongora)."
        }
    ],
    "tud√≥sok": [
        {
            "question": "Ki alap√≠totta a V√∂r√∂skeresztet?",
            "options": ["Albert Schweitzer", "Jean-Henri Dunant", "K√°rm√°n T√≥dor", "Jedlik √Ånyos"],
            "correct": 1,
            "explanation": "Jean-Henri Dunant alap√≠totta a V√∂r√∂skeresztet."
        },
        {
            "question": "Melyik magyar tud√≥s volt benc√©s szerzetes?",
            "options": ["K√°rm√°n T√≥dor", "Csonka J√°nos", "Jedlik √Ånyos", "Bolyai J√°nos"],
            "correct": 2,
            "explanation": "Jedlik √Ånyos benc√©s szerzetes volt, sz√°mos tal√°lm√°nya k√∂z√ºl a dinam√≥ az egyik legismertebb."
        },
        {
            "question": "Ki dolgozta ki a Cauchy-eloszl√°st?",
            "options": ["Gauss", "Cauchy", "Euler", "Newton"],
            "correct": 1,
            "explanation": "Augustin-Louis Cauchy francia matematikus dolgozta ki a r√≥la elnevezett eloszl√°st."
        },
        {
            "question": "Ki oldotta meg a k√∂nigsbergi hidak probl√©m√°j√°t?",
            "options": ["Newton", "Leibniz", "Euler", "Gauss"],
            "correct": 2,
            "explanation": "Leonhard Euler oldotta meg a k√∂nigsbergi hidak probl√©m√°j√°t, megalap√≠tva a gr√°felm√©let alapjait."
        },
        {
            "question": "Ki volt Konrad Lorenz?",
            "options": ["Fizikus", "Etol√≥gus", "K√©mikus", "Matematikus"],
            "correct": 1,
            "explanation": "Konrad Lorenz osztr√°k etol√≥gus (√°llatviselked√©s-kutat√≥) volt, Nobel-d√≠jas."
        },
        {
            "question": "K√°rm√°n T√≥dor melyik tudom√°nyter√ºleten alkotott?",
            "options": ["Biol√≥gia", "Aerodinamika", "K√©mia", "Geol√≥gia"],
            "correct": 1,
            "explanation": "K√°rm√°n T√≥dor magyar sz√°rmaz√°s√∫ aerodinamikus, a K√°rm√°n-√∂rv√©nyek felfedez≈ëje."
        },
        {
            "question": "Ki volt Albert Schweitzer?",
            "options": ["Fizikus", "Orvos √©s filoz√≥fus", "K√©mikus", "Matematikus"],
            "correct": 1,
            "explanation": "Albert Schweitzer n√©met-francia orvos, filoz√≥fus √©s teol√≥gus volt, Nobel-b√©ked√≠jas."
        },
        {
            "question": "Csonka J√°nos mivel foglalkozott?",
            "options": ["Csillag√°szat", "G√©p√©szet", "Botanika", "Geol√≥gia"],
            "correct": 1,
            "explanation": "Csonka J√°nos magyar g√©p√©szm√©rn√∂k √©s feltal√°l√≥ volt."
        },
        {
            "question": "Ki a fotoszint√©zis kutat√°s√°nak egyik √∫tt√∂r≈ëje?",
            "options": ["Darwin", "Mendel", "Van Helmont", "Pasteur"],
            "correct": 2,
            "explanation": "Jan Baptist van Helmont belga tud√≥s volt az egyik els≈ë, aki a fotoszint√©zist kutatta."
        },
        {
            "question": "Mi a ganglion az orvostudom√°nyban?",
            "options": ["Izom", "Idegd√∫c", "Csont", "V√©red√©ny"],
            "correct": 1,
            "explanation": "A ganglion idegd√∫c, idegsejtek csoportosul√°sa az idegrendszerben."
        }
    ],
    "mitol√≥gia": [
        {
            "question": "Ki a g√∂r√∂g mitol√≥gi√°ban a nap, j√≥sl√°s, k√∂lt√©szet √©s zene istene?",
            "options": ["Ar√©sz", "Apoll√≥n", "Herm√©sz", "H√©phaisztosz"],
            "correct": 1,
            "explanation": "Apoll√≥n a g√∂r√∂g mitol√≥gi√°ban a nap, j√≥sl√°s, k√∂lt√©szet √©s zene istene."
        },
        {
            "question": "Ki volt Orpheusz feles√©ge?",
            "options": ["Eur√ºdik√©", "Artemisz", "Aphrodit√©", "Thetisz"],
            "correct": 0,
            "explanation": "Eur√ºdik√© volt Orpheusz feles√©ge, akit k√≠gy√≥ mart meg."
        },
        {
            "question": "Ki a h√°bor√∫ √©s v√©ront√°s istene a g√∂r√∂g mitol√≥gi√°ban?",
            "options": ["Apoll√≥n", "Ar√©sz", "H√©phaisztosz", "Herm√©sz"],
            "correct": 1,
            "explanation": "Ar√©sz a h√°bor√∫ √©s v√©ront√°s istene, akit m√©g az istenek sem kedveltek."
        },
        {
            "question": "Ki Akhilleusz anyja?",
            "options": ["H√©ra", "Aphrodit√©", "Thetisz", "Artemisz"],
            "correct": 2,
            "explanation": "Thetisz tengeri istenn≈ë Akhilleusz anyja, pr√≥b√°lta halhatatlann√° tenni fi√°t."
        },
        {
            "question": "Ki a t≈±z, kov√°csmesters√©g √©s technol√≥gia istene?",
            "options": ["Apoll√≥n", "Ar√©sz", "H√©phaisztosz", "Herm√©sz"],
            "correct": 2,
            "explanation": "H√©phaisztosz a s√°nta isten, aki gy√∂ny√∂r≈± fegyvereket kov√°csolt."
        },
        {
            "question": "Ki az alvil√°g r√©v√©sze?",
            "options": ["Had√©sz", "Khar√≥n", "Orpheusz", "Herm√©sz"],
            "correct": 1,
            "explanation": "Khar√≥n az alvil√°g r√©v√©sze, aki √°tviszi azokat, akik megfizett√©k az oboloszt."
        },
        {
            "question": "Ki a vad√°szat, erd≈ëk √©s sz≈±ziess√©g istenn≈ëje?",
            "options": ["H√©ra", "Aphrodit√©", "Artemisz", "Ath√©n√©"],
            "correct": 2,
            "explanation": "Artemisz a vad√°szat, erd≈ëk √©s sz≈±ziess√©g istenn≈ëje."
        },
        {
            "question": "Ki a szerelem, v√°gy √©s sz√©ps√©g istenn≈ëje?",
            "options": ["H√©ra", "Aphrodit√©", "Artemisz", "Ath√©n√©"],
            "correct": 1,
            "explanation": "Aphrodit√© a szerelem, v√°gy √©s sz√©ps√©g istenn≈ëje, a tenger habjaib√≥l sz√ºletett."
        },
        {
            "question": "Mi okozta a tr√≥jai h√°bor√∫t?",
            "options": ["H√©ra bossz√∫ja", "Aphrodit√© aranyalm√°ja", "Zeus haragja", "Ath√©n√© bossz√∫ja"],
            "correct": 1,
            "explanation": "Aphrodit√© aranyalm√°ja okozta a tr√≥jai h√°bor√∫t."
        },
        {
            "question": "Ki lett Ath√©n v√©d≈ëistenn≈ëje?",
            "options": ["Aphrodit√©", "Artemisz", "Ath√©n√©", "H√©ra"],
            "correct": 2,
            "explanation": "Ath√©n√©, a b√∂lcsess√©g √©s hadvisel√©s istenn≈ëje lett Ath√©n v√©d≈ëistenn≈ëje."
        }
    ]
}

def get_selected_questions(selected_topics, num_questions):
    """Kiv√°lasztott t√©mak√∂r√∂kb≈ël v√©letlenszer≈± k√©rd√©seket v√°laszt"""
    all_questions = []
    
    for topic in selected_topics:
        if topic in QUIZ_DATA_BY_TOPIC:
            topic_questions = QUIZ_DATA_BY_TOPIC[topic].copy()
            for q in topic_questions:
                q["topic"] = topic
            all_questions.extend(topic_questions)
    
    if len(all_questions) == 0:
        return []
    
    # Ha kevesebb k√©rd√©s van, mint amennyit k√©rnek, adjuk vissza az √∂sszeset
    if len(all_questions) <= num_questions:
        return all_questions
    
    # V√©letlenszer≈± kiv√°laszt√°s
    return random.sample(all_questions, num_questions)

def reset_quiz(selected_topics, num_questions):
    """Quiz √∫jraind√≠t√°sa a kiv√°lasztott be√°ll√≠t√°sokkal"""
    st.session_state.selected_questions = get_selected_questions(selected_topics, num_questions)
    st.session_state.current_question = 0
    st.session_state.score = 0
    st.session_state.answers = []
    st.session_state.quiz_completed = False
    st.session_state.start_time = time.time()
    st.session_state.total_questions = len(st.session_state.selected_questions)

def main():
    st.title("üß† Advanced PDF Quiz Alkalmaz√°s")
    st.markdown("**T√©mak√∂r√∂k szerint csoportos√≠tott k√©rd√©sek**")
    st.markdown("---")
    
    # Sidebar - Be√°ll√≠t√°sok
    with st.sidebar:
        st.header("‚öôÔ∏è Quiz Be√°ll√≠t√°sok")
        
        # T√©mak√∂r v√°laszt√°s
        st.subheader("üìö T√©mak√∂r√∂k")
        available_topics = list(QUIZ_DATA_BY_TOPIC.keys())
        topic_labels = {
            "f√∂ldrajz": "üåç F√∂ldrajz", 
            "zene": "üéµ Zene",
            "tud√≥sok": "üî¨ Tud√≥sok", 
            "mitol√≥gia": "üèõÔ∏è Mitol√≥gia"
        }
        
        selected_topics = []
        for topic in available_topics:
            if st.checkbox(topic_labels[topic], key=f"topic_{topic}"):
                selected_topics.append(topic)
        
        # K√©rd√©sek sz√°ma
        st.subheader("üî¢ K√©rd√©sek sz√°ma")
        max_available = sum(len(questions) for topic, questions in QUIZ_DATA_BY_TOPIC.items() if topic in selected_topics)
        
        if selected_topics:
            num_questions = st.slider(
                "K√©rd√©sek sz√°ma:", 
                min_value=1, 
                max_value=min(10, max_available), 
                value=min(5, max_available),
                help=f"El√©rhet≈ë k√©rd√©sek: {max_available}"
            )
        else:
            st.warning("‚ö†Ô∏è V√°lassz legal√°bb egy t√©mak√∂rt!")
            num_questions = 1
        
        # Quiz ind√≠t√°s
        if st.button("üöÄ Quiz Ind√≠t√°sa", type="primary", disabled=len(selected_topics)==0):
            reset_quiz(selected_topics, num_questions)
            st.rerun()
        
        # T√©mak√∂r√∂k inform√°ci√≥
        st.markdown("---")
        st.subheader("üìä T√©mak√∂r Statisztik√°k")
        for topic, questions in QUIZ_DATA_BY_TOPIC.items():
            icon = topic_labels[topic].split()[0]
            st.metric(f"{icon} {topic.title()}", f"{len(questions)} k√©rd√©s")
    
    # F≈ë tartalom
    if 'selected_questions' not in st.session_state or len(st.session_state.selected_questions) == 0:
        # Kezd≈ë k√©perny≈ë
        col1, col2, col3 = st.columns([1, 2, 1])
        
        with col2:
            st.info("""
            ### üëã √údv√∂z√∂l az Advanced Quiz!
            
            **√öj funkci√≥k:**
            - üéØ **T√©mak√∂r v√°laszt√°s**: V√°laszd ki a kedvenc t√©m√°idat
            - üî¢ **Rugalmas k√©rd√©ssz√°m**: 1-10 k√©rd√©s k√∂z√∂tt
            - üìä **T√©mak√∂r statisztik√°k**: L√°sd mennyi k√©rd√©s van t√©mak√∂r√∂nk√©nt
            - üé® **Sz√≠nes kateg√≥ri√°k**: Minden t√©ma m√°s sz√≠nnel
            
            **El√©rhet≈ë t√©mak√∂r√∂k:**
            - üåç **F√∂ldrajz** (10 k√©rd√©s): Orsz√°gok, f≈ëv√°rosok, hegyek, foly√≥k
            - üéµ **Zene** (10 k√©rd√©s): Zeneszerz≈ëk, m≈±vek, klasszikus zene
            - üî¨ **Tud√≥sok** (10 k√©rd√©s): H√≠res tud√≥sok √©s felfedez√©sek
            - üèõÔ∏è **Mitol√≥gia** (10 k√©rd√©s): G√∂r√∂g istenek √©s h≈ës√∂k
            
            **Kezd√©shez v√°lassz t√©mak√∂r(√∂ke)t a bal oldali panelen!**
            """)
    
    elif st.session_state.quiz_completed:
        # Eredm√©nyek megjelen√≠t√©se
        col1, col2, col3 = st.columns([1, 2, 1])
        
        with col2:
            st.success("üéâ Quiz Befejezve!")
            
            score_percentage = (st.session_state.score / st.session_state.total_questions) * 100
            
            st.metric("V√©gs≈ë Pontsz√°m", f"{st.session_state.score}/{st.session_state.total_questions} ({score_percentage:.0f}%)")
            
            total_time = time.time() - st.session_state.start_time
            st.metric("Teljes id≈ë", f"{total_time:.0f} m√°sodperc")
            
            # √ârt√©kel√©s
            if score_percentage >= 80:
                st.balloons()
                st.success("üåü Kiv√°l√≥! Nagyszer≈± tud√°s!")
            elif score_percentage >= 60:
                st.info("üëç J√≥! Sz√©p munka!")
            else:
                st.warning("üìö √ârdemes tanulni m√©g!")
        
        # R√©szletes eredm√©nyek
        st.markdown("---")
        st.header("üìù R√©szletes Eredm√©nyek")
        
        # T√©mak√∂r√∂k szerinti csoportos√≠t√°s
        results_by_topic = {}
        for i, (question, answer) in enumerate(zip(st.session_state.selected_questions, st.session_state.answers)):
            topic = question.get("topic", "egy√©b")
            if topic not in results_by_topic:
                results_by_topic[topic] = []
            results_by_topic[topic].append((i, question, answer))
        
        for topic, topic_results in results_by_topic.items():
            topic_icon = topic_labels.get(topic, f"üìã {topic}")
            
            with st.expander(f"{topic_icon} - {len(topic_results)} k√©rd√©s"):
                for i, question, answer in topic_results:
                    is_correct = answer == question["correct"]
                    
                    st.markdown(f"**{i+1}. {question['question']}** {'‚úÖ' if is_correct else '‚ùå'}")
                    
                    col1, col2 = st.columns(2)
                    with col1:
                        st.write(f"**V√°laszod:** {question['options'][answer]}")
                    with col2:
                        st.write(f"**Helyes v√°lasz:** {question['options'][question['correct']]}")
                    
                    st.info(f"üí° {question['explanation']}")
                    st.markdown("---")
    
    else:
        # Quiz folyamatban
        current_q = st.session_state.selected_questions[st.session_state.current_question]
        topic_icon = topic_labels.get(current_q.get("topic", ""), "üìã")
        
        # Progress √©s info
        col1, col2, col3 = st.columns(3)
        with col1:
            st.metric("K√©rd√©s", f"{st.session_state.current_question + 1}/{st.session_state.total_questions}")
        with col2:
            answered = len(st.session_state.answers)
            st.metric("Pontsz√°m", f"{st.session_state.score}/{answered}")
        with col3:
            if st.session_state.current_question > 0:
                elapsed = time.time() - st.session_state.start_time
                st.metric("Eltelt id≈ë", f"{elapsed:.0f}s")
        
        # K√©rd√©s megjelen√≠t√©se
        st.markdown(f"### {topic_icon} K√©rd√©s {st.session_state.current_question + 1}")
        st.markdown(f"#### {current_q['question']}")
        
        # V√°laszlehet≈ës√©gek
        selected_option = st.radio(
            "V√°laszd ki a helyes v√°laszt:",
            options=range(len(current_q['options'])),
            format_func=lambda x: current_q['options'][x],
            key=f"question_{st.session_state.current_question}"
        )
        
        st.markdown("---")
        
        # V√°lasz k√ºld√©se gomb
        col1, col2, col3 = st.columns([1, 1, 1])
        
        with col2:
            if st.button("üì§ V√°lasz K√ºld√©se", type="primary", key="submit_answer"):
                # V√°lasz ment√©se
                st.session_state.answers.append(selected_option)
                
                # Pontsz√°m friss√≠t√©se
                if selected_option == current_q['correct']:
                    st.session_state.score += 1
                
                # K√∂vetkez≈ë k√©rd√©s vagy befejez√©s
                if st.session_state.current_question + 1 < st.session_state.total_questions:
                    st.session_state.current_question += 1
                    st.rerun()
                else:
                    st.session_state.quiz_completed = True
                    st.rerun()
        
        # El≈ërehalad√°s jelz≈ë
        progress = (st.session_state.current_question + 1) / st.session_state.total_questions
        st.progress(progress)

if __name__ == "__main__":
    main() 
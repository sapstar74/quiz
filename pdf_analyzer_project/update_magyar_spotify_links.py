#!/usr/bin/env python3
"""
Magyar zenekarok k√©rd√©sek friss√≠t√©se val√≥di Spotify linkekkel
"""

import re

# Import val√≥di Spotify linkek
from magyar_zenekarok_spotify_api_links import MAGYAR_ZENEKAROK_SPOTIFY_API_LINKS

def update_spotify_links_in_file():
    """Friss√≠ti a magyar_zenekarok.py f√°jlt val√≥di Spotify linkekkel"""
    
    # Olvasd be az eredeti f√°jlt
    with open('topics/magyar_zenekarok.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # Fallback link
    fallback_link = "https://open.spotify.com/artist/0YqQvRjqNXAv2K5FqS9cdO"
    
    # Sz√°ml√°l√≥k
    updated_count = 0
    total_questions = 0
    
    # Keresd meg az √∂sszes k√©rd√©st √©s friss√≠tsd a Spotify linkeket
    lines = content.split('\n')
    updated_lines = []
    
    for line in lines:
        if '"spotify_embed":' in line and fallback_link in line:
            # Keresd meg a k√©rd√©sben szerepl≈ë zenekar nev√©t
            # Visszafel√© keres√ºnk a k√©rd√©s sor√°ban
            question_index = len(updated_lines) - 1
            while question_index >= 0 and '"question":' not in updated_lines[question_index]:
                question_index -= 1
            
            if question_index >= 0:
                question_line = updated_lines[question_index]
                # Keresd meg a k√©rd√©sben szerepl≈ë zenekar nev√©t
                for zenekar, spotify_link in MAGYAR_ZENEKAROK_SPOTIFY_API_LINKS.items():
                    if zenekar in question_line:
                        # Friss√≠tsd a Spotify linket
                        new_line = line.replace(fallback_link, spotify_link)
                        updated_lines.append(new_line)
                        updated_count += 1
                        print(f"‚úÖ Friss√≠tve: {zenekar} -> {spotify_link}")
                        break
                else:
                    # Ha nem tal√°ltunk egyez√©st, hagyd meg a fallback linket
                    updated_lines.append(line)
                    print(f"‚ö†Ô∏è  Nem tal√°ltam egyez√©st: {question_line.strip()}")
            else:
                updated_lines.append(line)
        else:
            updated_lines.append(line)
        
        # Sz√°mold a k√©rd√©seket
        if '"question":' in line:
            total_questions += 1
    
    # √çrd ki a friss√≠tett tartalmat
    updated_content = '\n'.join(updated_lines)
    
    # Mentsd el a friss√≠tett f√°jlt
    with open('topics/magyar_zenekarok_updated.py', 'w', encoding='utf-8') as f:
        f.write(updated_content)
    
    print(f"\nüìä √ñsszefoglal√≥:")
    print(f"üìù √ñsszes k√©rd√©s: {total_questions}")
    print(f"‚úÖ Friss√≠tett link: {updated_count}")
    print(f"üìÅ Friss√≠tett f√°jl: topics/magyar_zenekarok_updated.py")
    
    return updated_content

def create_updated_questions():
    """L√©trehozza a friss√≠tett k√©rd√©seket a val√≥di Spotify linkekkel"""
    
    # Alap k√©rd√©sek strukt√∫ra
    questions_template = []
    
    # Magyar alternat√≠v zenekarok
    alt_zenekarok = [
        "Hiperkarma", "HS7", "√ìri√°s", "Kisp√°l", "Kiscsillag", "Vad Fruttik",
        "Tereskova", "Anna and the Barbies", "Honeybeast", "Konyha",
        "Follow the flow", "Elef√°nt", "4Street", "Bagossy Brothers",
        "Csaknekedkisl√°ny", "L√≥ci j√°tszik", "Galaxisok"
    ]
    
    for zenekar in alt_zenekarok:
        spotify_link = MAGYAR_ZENEKAROK_SPOTIFY_API_LINKS.get(zenekar, "https://open.spotify.com/artist/0YqQvRjqNXAv2K5FqS9cdO")
        question = {
            "question": f"Melyik magyar alternat√≠v zenekar tagja volt {zenekar}?",
            "spotify_embed": spotify_link,
            "options": [zenekar, 'Hiperkarma', 'HS7', '√ìri√°s'],
            "correct": 0,
            "explanation": f"{zenekar} magyar alternat√≠v zenekar",
            "topic": "magyar_zenekarok"
        }
        questions_template.append(question)
    
    # Magyar roma/n√©pzene
    roma_zenekarok = [
        "Parno Graszt", "Palya Bea", "Bohemian Betyars", "Aurevoir", "D√°nielffy", "Ham Ko Ham"
    ]
    
    for zenekar in roma_zenekarok:
        spotify_link = MAGYAR_ZENEKAROK_SPOTIFY_API_LINKS.get(zenekar, "https://open.spotify.com/artist/0YqQvRjqNXAv2K5FqS9cdO")
        question = {
            "question": f"Melyik magyar roma/n√©pzene zenekar tagja volt {zenekar}?",
            "spotify_embed": spotify_link,
            "options": [zenekar, 'Parno Graszt', 'Palya Bea', 'Bohemian Betyars'],
            "correct": 0,
            "explanation": f"{zenekar} magyar roma/n√©pzene zenekar",
            "topic": "magyar_zenekarok"
        }
        questions_template.append(question)
    
    # Magyar elektronikus
    elektronikus_zenekarok = [
        "Carbonfools", "Zagar", "Neo", "Soulwave", "Neon"
    ]
    
    for zenekar in elektronikus_zenekarok:
        spotify_link = MAGYAR_ZENEKAROK_SPOTIFY_API_LINKS.get(zenekar, "https://open.spotify.com/artist/0YqQvRjqNXAv2K5FqS9cdO")
        question = {
            "question": f"Melyik magyar elektronikus zenekar tagja volt {zenekar}?",
            "spotify_embed": spotify_link,
            "options": [zenekar, 'Carbonfools', 'Zagar', 'Neo'],
            "correct": 0,
            "explanation": f"{zenekar} magyar elektronikus zenekar",
            "topic": "magyar_zenekarok"
        }
        questions_template.append(question)
    
    # Magyar rock/pop
    rock_pop_zenekarok = [
        "Quimby", "Tankcsapda", "P. Mobil", "Republic", "Bonanza Banzai", "Korai √ñr√∂m"
    ]
    
    for zenekar in rock_pop_zenekarok:
        spotify_link = MAGYAR_ZENEKAROK_SPOTIFY_API_LINKS.get(zenekar, "https://open.spotify.com/artist/0YqQvRjqNXAv2K5FqS9cdO")
        question = {
            "question": f"Melyik magyar rock/pop zenekar tagja volt {zenekar}?",
            "spotify_embed": spotify_link,
            "options": [zenekar, 'Quimby', 'Tankcsapda', 'P. Mobil'],
            "correct": 0,
            "explanation": f"{zenekar} magyar rock/pop zenekar",
            "topic": "magyar_zenekarok"
        }
        questions_template.append(question)
    
    # Python k√≥d gener√°l√°sa
    python_code = "# Magyar zenekarok k√©rd√©sek val√≥di Spotify linkekkel\n\n"
    python_code += "MAGYAR_ZENEKAROK_QUESTIONS = [\n"
    
    for i, question in enumerate(questions_template):
        python_code += "    {\n"
        python_code += f'        "question": "{question["question"]}",\n'
        python_code += f'        "spotify_embed": "{question["spotify_embed"]}",\n'
        python_code += f'        "options": {question["options"]},\n'
        python_code += f'        "correct": {question["correct"]},\n'
        python_code += f'        "explanation": "{question["explanation"]}",\n'
        python_code += f'        "topic": "{question["topic"]}"\n'
        python_code += "    }"
        if i < len(questions_template) - 1:
            python_code += ","
        python_code += "\n"
    
    python_code += "]\n"
    
    # Mentsd el a friss√≠tett k√©rd√©seket
    with open('topics/magyar_zenekarok_with_real_links.py', 'w', encoding='utf-8') as f:
        f.write(python_code)
    
    print(f"\nüìÅ Friss√≠tett k√©rd√©sek mentve: topics/magyar_zenekarok_with_real_links.py")
    print(f"‚úÖ {len(questions_template)} k√©rd√©s val√≥di Spotify linkekkel")
    
    return questions_template

if __name__ == "__main__":
    print("üéµ Magyar zenekarok k√©rd√©sek friss√≠t√©se val√≥di Spotify linkekkel...")
    
    # Opci√≥ 1: Friss√≠tsd a megl√©v≈ë f√°jlt
    print("\n1. Megl√©v≈ë f√°jl friss√≠t√©se")
    update_spotify_links_in_file()
    
    # Opci√≥ 2: √öj f√°jl l√©trehoz√°sa
    print("\n2. √öj f√°jl l√©trehoz√°sa val√≥di linkekkel")
    create_updated_questions()
    
    print("\nüéâ Friss√≠t√©s befejezve!") 
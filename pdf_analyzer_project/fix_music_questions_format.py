#!/usr/bin/env python3
"""
Zenei k√©rd√©sek form√°tum√°nak jav√≠t√°sa
A k√©rd√©s legyen "Ki az el≈ëad√≥?" √©s az el≈ëad√≥ neve ne szerepeljen a k√©rd√©sben
Elt√°vol√≠tjuk a "Hallgasd meg a zenem≈±vet:" sz√∂veget is
"""

import re

def fix_magyar_zenekarok_questions():
    """Magyar zenekarok k√©rd√©sek jav√≠t√°sa"""
    
    with open('topics/magyar_zenekarok.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # Regex pattern a k√©rd√©sek keres√©s√©hez
    pattern = r'"question":\s*"([^"]*)"'
    
    def replace_question(match):
        question_text = match.group(1)
        
        # Ha a k√©rd√©s tartalmazza az el≈ëad√≥ nev√©t vagy a "Hallgasd meg" sz√∂veget, cser√©lj√ºk le
        if "tagja volt" in question_text or "Hallgasd meg" in question_text:
            # Kivonjuk az el≈ëad√≥ nev√©t a k√©rd√©sb≈ël
            # P√©lda: "Melyik magyar alternat√≠v zenekar tagja volt Hiperkarma?" -> "Ki az el≈ëad√≥?"
            return '"question": "Ki az el≈ëad√≥?"'
        
        return match.group(0)
    
    # Cser√©lj√ºk le a k√©rd√©seket
    updated_content = re.sub(pattern, replace_question, content)
    
    # Ments√ºk el a friss√≠tett f√°jlt
    with open('topics/magyar_zenekarok.py', 'w', encoding='utf-8') as f:
        f.write(updated_content)
    
    print("‚úÖ Magyar zenekarok k√©rd√©sek jav√≠tva!")

def fix_nemzetkozi_zenekarok_questions():
    """Nemzetk√∂zi zenekarok k√©rd√©sek jav√≠t√°sa"""
    
    with open('topics/nemzetkozi_zenekarok.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # Regex pattern a k√©rd√©sek keres√©s√©hez
    pattern = r'"question":\s*"([^"]*)"'
    
    def replace_question(match):
        question_text = match.group(1)
        
        # Ha a k√©rd√©s tartalmazza az el≈ëad√≥ nev√©t vagy a "Hallgasd meg" sz√∂veget, cser√©lj√ºk le
        if "tagja volt" in question_text or "el≈ëad√≥" in question_text or "Hallgasd meg" in question_text:
            # Kivonjuk az el≈ëad√≥ nev√©t a k√©rd√©sb≈ël
            return '"question": "Ki az el≈ëad√≥?"'
        
        return match.group(0)
    
    # Cser√©lj√ºk le a k√©rd√©seket
    updated_content = re.sub(pattern, replace_question, content)
    
    # Ments√ºk el a friss√≠tett f√°jlt
    with open('topics/nemzetkozi_zenekarok.py', 'w', encoding='utf-8') as f:
        f.write(updated_content)
    
    print("‚úÖ Nemzetk√∂zi zenekarok k√©rd√©sek jav√≠tva!")

def fix_konnyuzene_questions():
    """K√∂nny≈±zene k√©rd√©sek jav√≠t√°sa"""
    
    with open('topics/konnyuzene.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # Regex pattern a k√©rd√©sek keres√©s√©hez
    pattern = r'"question":\s*"([^"]*)"'
    
    def replace_question(match):
        question_text = match.group(1)
        
        # Ha a k√©rd√©s tartalmazza az el≈ëad√≥ nev√©t vagy a "Hallgasd meg" sz√∂veget, cser√©lj√ºk le
        if "tagja volt" in question_text or "el≈ëad√≥" in question_text or "Hallgasd meg" in question_text:
            # Kivonjuk az el≈ëad√≥ nev√©t a k√©rd√©sb≈ël
            return '"question": "Ki az el≈ëad√≥?"'
        
        return match.group(0)
    
    # Cser√©lj√ºk le a k√©rd√©seket
    updated_content = re.sub(pattern, replace_question, content)
    
    # Ments√ºk el a friss√≠tett f√°jlt
    with open('topics/konnyuzene.py', 'w', encoding='utf-8') as f:
        f.write(updated_content)
    
    print("‚úÖ K√∂nny≈±zene k√©rd√©sek jav√≠tva!")

def fix_classical_music_questions():
    """Klasszikus zene k√©rd√©sek jav√≠t√°sa"""
    
    with open('classical_music_questions_tschaikovsky_updated.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # Regex pattern a k√©rd√©sek keres√©s√©hez
    pattern = r'"question":\s*"([^"]*)"'
    
    def replace_question(match):
        question_text = match.group(1)
        
        # Ha a k√©rd√©s tartalmazza a zeneszerz≈ë nev√©t vagy a "Hallgasd meg" sz√∂veget, cser√©lj√ºk le
        if "zeneszerz≈ë" in question_text or "composer" in question_text.lower() or "Hallgasd meg" in question_text:
            # Kivonjuk a zeneszerz≈ë nev√©t a k√©rd√©sb≈ël
            return '"question": "Ki a zeneszerz≈ë?"'
        
        return match.group(0)
    
    # Cser√©lj√ºk le a k√©rd√©seket
    updated_content = re.sub(pattern, replace_question, content)
    
    # Ments√ºk el a friss√≠tett f√°jlt
    with open('classical_music_questions_tschaikovsky_updated.py', 'w', encoding='utf-8') as f:
        f.write(updated_content)
    
    print("‚úÖ Klasszikus zene k√©rd√©sek jav√≠tva!")

if __name__ == "__main__":
    print("üéµ Zenei k√©rd√©sek form√°tum√°nak jav√≠t√°sa...")
    
    try:
        fix_magyar_zenekarok_questions()
    except FileNotFoundError:
        print("‚ö†Ô∏è  Magyar zenekarok f√°jl nem tal√°lhat√≥")
    
    try:
        fix_nemzetkozi_zenekarok_questions()
    except FileNotFoundError:
        print("‚ö†Ô∏è  Nemzetk√∂zi zenekarok f√°jl nem tal√°lhat√≥")
    
    try:
        fix_konnyuzene_questions()
    except FileNotFoundError:
        print("‚ö†Ô∏è  K√∂nny≈±zene f√°jl nem tal√°lhat√≥")
    
    try:
        fix_classical_music_questions()
    except FileNotFoundError:
        print("‚ö†Ô∏è  Klasszikus zene f√°jl nem tal√°lhat√≥")
    
    print("üéâ Zenei k√©rd√©sek form√°tuma jav√≠tva!") 
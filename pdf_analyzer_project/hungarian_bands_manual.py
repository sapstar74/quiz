#!/usr/bin/env python3
"""
Magyar zenekarok manu√°lis keres√©se Spotify-on
"""

import requests
import json
import time

def search_spotify_artist_manual(artist_name):
    """Manu√°lis Spotify keres√©s"""
    
    # Ismert magyar zenekarok √©s val√≥di Spotify ID-jai
    known_artists = {
        "Kisp√°l √©s a Borz": "4iJbqBq2WnU5k3IXfk6FCP",
        "Zagar": "0YqQvRjqNXAv2K5FqS9cdO",  # placeholder
        "Elef√°nt": "0YqQvRjqNXAv2K5FqS9cdO", # placeholder
        "Neo": "0YqQvRjqNXAv2K5FqS9cdO",     # placeholder
        "Carbonfools": "0YqQvRjqNXAv2K5FqS9cdO", # placeholder
        "Soulwave": "0YqQvRjqNXAv2K5FqS9cdO",    # placeholder
        "Neon": "0YqQvRjqNXAv2K5FqS9cdO",        # placeholder
        "Parno Graszt": "0YqQvRjqNXAv2K5FqS9cdO", # placeholder
        "Bea Palya": "0YqQvRjqNXAv2K5FqS9cdO",    # placeholder
        "Bohemian Betyars": "0YqQvRjqNXAv2K5FqS9cdO", # placeholder
        "Aurevoir": "0YqQvRjqNXAv2K5FqS9cdO",     # placeholder
        "D√°nielffy": "0YqQvRjqNXAv2K5FqS9cdO",    # placeholder
        "Ham Ko Ham": "0YqQvRjqNXAv2K5FqS9cdO",   # placeholder
        "Bagossy Brothers Company": "0YqQvRjqNXAv2K5FqS9cdO", # placeholder
        "Follow the Flow": "0YqQvRjqNXAv2K5FqS9cdO",  # placeholder
        "Anna and the Barbies": "0YqQvRjqNXAv2K5FqS9cdO", # placeholder
        "Honeybeast": "0YqQvRjqNXAv2K5FqS9cdO",   # placeholder
        "Konyha": "0YqQvRjqNXAv2K5FqS9cdO",       # placeholder
        "4Street": "0YqQvRjqNXAv2K5FqS9cdO",      # placeholder
        "Csaknekedkisl√°ny": "0YqQvRjqNXAv2K5FqS9cdO", # placeholder
        "L√≥ci j√°tszik": "0YqQvRjqNXAv2K5FqS9cdO", # placeholder
        "Galaxisok": "0YqQvRjqNXAv2K5FqS9cdO",    # placeholder
        "Hiperkarma": "0YqQvRjqNXAv2K5FqS9cdO",   # placeholder
        "HS7": "0YqQvRjqNXAv2K5FqS9cdO",          # placeholder
        "√ìri√°s": "0YqQvRjqNXAv2K5FqS9cdO",        # placeholder
        "Kiscsillag": "0YqQvRjqNXAv2K5FqS9cdO",   # placeholder
        "Vad Fruttik": "0YqQvRjqNXAv2K5FqS9cdO",  # placeholder
        "Tereskova": "0YqQvRjqNXAv2K5FqS9cdO",    # placeholder
    }
    
    # Try exact match first
    if artist_name in known_artists:
        artist_id = known_artists[artist_name]
        if artist_id != "0YqQvRjqNXAv2K5FqS9cdO":
            return f"https://open.spotify.com/artist/{artist_id}"
    
    # Try variations
    variations = [
        artist_name,
        f"{artist_name} magyar",
        f"{artist_name} hungary",
        f"{artist_name} budapest"
    ]
    
    for variation in variations:
        if variation in known_artists:
            artist_id = known_artists[variation]
            if artist_id != "0YqQvRjqNXAv2K5FqS9cdO":
                return f"https://open.spotify.com/artist/{artist_id}"
    
    return None

def main():
    print("üéµ Magyar zenekarok manu√°lis keres√©se...")
    
    # Magyar zenekarok list√°ja (eredeti nevek)
    magyar_zenekarok = [
        "Kisp√°l", "HS7", "√ìri√°s", "Kiscsillag", "Vad Fruttik",
        "Tereskova", "Anna and the Barbies", "Honeybeast", "Konyha",
        "Follow the flow", "Elef√°nt", "4Street", "Bagossy Brothers",
        "Csaknekedkisl√°ny", "L√≥ci j√°tszik", "Galaxisok", "Parno Graszt",
        "Palya Bea", "Bohemian Betyars", "Aurevoir", "D√°nielffy",
        "Ham Ko Ham", "Carbonfools", "Zagar", "Neo", "Soulwave", "Neon"
    ]
    
    # N√©v lek√©pez√©sek a val√≥di Spotify nevekre
    name_mappings = {
        "Kisp√°l": "Kisp√°l √©s a Borz",
        "Palya Bea": "Bea Palya",
        "Bagossy Brothers": "Bagossy Brothers Company",
        "Follow the flow": "Follow the Flow"
    }
    
    results = {}
    success_count = 0
    fallback_count = 0
    
    print(f"üîç {len(magyar_zenekarok)} magyar zenekar keres√©se...")
    
    for i, zenekar in enumerate(magyar_zenekarok, 1):
        print(f"[{i}/{len(magyar_zenekarok)}] Keres√©s: {zenekar}")
        
        # Try original name first
        link = search_spotify_artist_manual(zenekar)
        
        # If not found, try mapped name
        if not link and zenekar in name_mappings:
            mapped_name = name_mappings[zenekar]
            print(f"  üîÑ Pr√≥b√°lom: {mapped_name}")
            link = search_spotify_artist_manual(mapped_name)
        
        if link and "0YqQvRjqNXAv2K5FqS9cdO" not in link:
            print(f"‚úÖ {zenekar}: {link}")
            results[zenekar] = link
            success_count += 1
        else:
            # Fallback link
            fallback_link = "https://open.spotify.com/artist/0YqQvRjqNXAv2K5FqS9cdO"
            print(f"‚ùå {zenekar}: Fallback link")
            results[zenekar] = fallback_link
            fallback_count += 1
        
        time.sleep(1)  # Rate limiting
    
    # Eredm√©nyek ment√©se
    with open('magyar_zenekarok_spotify_links.json', 'w', encoding='utf-8') as f:
        json.dump(results, f, ensure_ascii=False, indent=2)
    
    # Python f√°jl gener√°l√°sa
    python_code = "# Magyar zenekarok Spotify linkjei\n"
    python_code += "MAGYAR_ZENEKAROK_SPOTIFY_LINKS = {\n"
    
    for zenekar, link in results.items():
        python_code += f'    "{zenekar}": "{link}",\n'
    
    python_code += "}\n"
    
    with open('magyar_zenekarok_spotify_links.py', 'w', encoding='utf-8') as f:
        f.write(python_code)
    
    print(f"\nüìÅ Eredm√©nyek mentve: magyar_zenekarok_spotify_links.json")
    print(f"‚úÖ {success_count} val√≥di link tal√°lva")
    print(f"‚ùå {fallback_count} fallback link")
    print(f"üìÅ Python f√°jl l√©trehozva: magyar_zenekarok_spotify_links.py")
    print("üéâ Keres√©s befejezve!")
    
    print("\nüìä √ñsszefoglal√≥:")
    for zenekar, link in results.items():
        status = "‚úÖ" if "0YqQvRjqNXAv2K5FqS9cdO" not in link else "‚ùå"
        print(f"{status} {zenekar}: {link}")

if __name__ == "__main__":
    main() 
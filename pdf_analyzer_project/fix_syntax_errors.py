#!/usr/bin/env python3
"""
Szintaktikai hib√°k jav√≠t√°sa a quiz f√°jlokban
"""

import re

def fix_foldrajz_syntax():
    """F√∂ldrajz f√°jl szintaktikai hib√°inak jav√≠t√°sa"""
    
    with open('topics/foldrajz.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # Jav√≠tsuk ki a hib√°s form√°tumot
    # "explanation":\n        "topic": "f√∂ldrajz", "sz√∂veg" -> "explanation": "sz√∂veg",\n        "topic": "f√∂ldrajz"
    pattern = r'"explanation":\s*\n\s*"topic": "f√∂ldrajz",\s*"([^"]+)"'
    
    def fix_explanation(match):
        explanation_text = match.group(1)
        return f'"explanation": "{explanation_text}",\n        "topic": "f√∂ldrajz"'
    
    updated_content = re.sub(pattern, fix_explanation, content)
    
    # Ments√ºk el a jav√≠tott f√°jlt
    with open('topics/foldrajz.py', 'w', encoding='utf-8') as f:
        f.write(updated_content)
    
    print("‚úÖ F√∂ldrajz szintaktikai hib√°k jav√≠tva!")

def fix_komolyzene_syntax():
    """Komolyzene f√°jl szintaktikai hib√°inak jav√≠t√°sa"""
    
    with open('classical_music_questions_tschaikovsky_updated.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # Jav√≠tsuk ki a hib√°s form√°tumot
    pattern = r'"spotify_found_artist":\s*\n\s*"topic": "komolyzene",\s*([^,]+)'
    
    def fix_spotify_field(match):
        spotify_value = match.group(1)
        return f'"spotify_found_artist": {spotify_value},\n        "topic": "komolyzene"'
    
    updated_content = re.sub(pattern, fix_spotify_field, content)
    
    # Ments√ºk el a jav√≠tott f√°jlt
    with open('classical_music_questions_tschaikovsky_updated.py', 'w', encoding='utf-8') as f:
        f.write(updated_content)
    
    print("‚úÖ Komolyzene szintaktikai hib√°k jav√≠tva!")

def fix_other_files_syntax():
    """T√∂bbi f√°jl szintaktikai hib√°inak jav√≠t√°sa"""
    
    files_to_fix = [
        ('topics/haboru_all_questions.py', 'h√°bor√∫k'),
        ('topics/kiralyok.py', 'magyar_kir√°lyok'),
        ('topics/tudosok.py', 'tud√≥sok'),
        ('topics/mitologia_all_questions.py', 'mitol√≥gia'),
        ('topics/allatok_balanced.py', '√°llatok'),
        ('topics/dramak.py', 'dr√°m√°k'),
        ('topics/sport_logok.py', 'sport_log√≥k'),
        ('topics/zaszlok_all_questions.py', 'z√°szl√≥k')
    ]
    
    for file_path, topic_name in files_to_fix:
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # Jav√≠tsuk ki a hib√°s form√°tumot
            pattern = r'"explanation":\s*\n\s*"topic": "' + re.escape(topic_name) + r'",\s*"([^"]+)"'
            
            def fix_explanation(match):
                explanation_text = match.group(1)
                return f'"explanation": "{explanation_text}",\n        "topic": "{topic_name}"'
            
            updated_content = re.sub(pattern, fix_explanation, content)
            
            # Ments√ºk el a jav√≠tott f√°jlt
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(updated_content)
            
            print(f"‚úÖ {file_path} szintaktikai hib√°k jav√≠tva!")
            
        except FileNotFoundError:
            print(f"‚ö†Ô∏è  {file_path} nem tal√°lhat√≥")

if __name__ == "__main__":
    print("üîß Szintaktikai hib√°k jav√≠t√°sa...")
    
    fix_foldrajz_syntax()
    fix_komolyzene_syntax()
    fix_other_files_syntax()
    
    print("üéâ Szintaktikai hib√°k jav√≠tva!") 